version: '3.8'

services:
  mongodb:
    image: mongo:latest
    container_name: retail_mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
    volumes:
      - mongodb_data:/data/db

  mysql:
    image: mysql:8.0
    container_name: retail_mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=example
      - MYSQL_DATABASE=retail_db
    volumes:
      - mysql_data:/var/lib/mysql

  localstack:
    image: localstack/localstack:latest
    container_name: retail_localstack
    ports:
      - "4566:4566"            # LocalStack Edge Proxy
      - "4510-4559:4510-4559"  # external services port range
    environment:
      - DEBUG=1
      - DOCKER_HOST=unix:///var/run/docker.sock
      - SERVICES=s3
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
    volumes:
      - "${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"

  main_server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: retail_main_server
    ports:
      - "8000:8000"
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=example
      - DB_NAME=retail_db
      - S3_ENDPOINT_URL=http://localstack:4566
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_REGION=us-east-1
    depends_on:
      - mysql
      - localstack
    # networks:
      # - retail_network

# networks:
  # retail_network:
    # driver: bridge

volumes:
  mongodb_data:
  mysql_data:
  localstack_data: 